---
- include_vars: users.yml
- include_vars: vault.yml

- name: Ensure building structure exists
  local_action: >
    file
    dest="{{ build_directory }}/{{ global_users[item.owner].id }}-{{ item.hostname }}"
    state=directory
  with_items:
    - "{{ guests }}"

- name: Deploy files
  local_action: >
    copy
    src="files/{{ item }}"
    dest="{{ build_directory }}/{{ item }}"
  with_items:
    - "rapidssl-ca.crt"

- name: Deploy Setup Script
  local_action: >
    template
    src=build-cloud-config-iso.sh.j2
    dest="{{ build_directory }}/build-cloud-config-iso.sh"
    mode="0700"

- name: Deploy cloud-config templates
  local_action: >
    template
    src=cloud-config.j2
    dest="{{ build_directory }}/{{ global_users[item.owner].id }}-{{ item.hostname }}/cloud-config"
  with_items:
    - "{{ guests }}"

- name: Run setup script to build cloud-config isos
  ignore_errors: yes
  local_action: >
    shell
    {{ build_directory }}/build-cloud-config-iso.sh {{ global_users[item.owner].id }}-{{ item.hostname }}
  with_items:
    - "{{ guests }}"

## FIXME: Currently included in build script
#- name: Upload to vsphere
#  local_action: vsphere_copy
#  args:
#    host: "{{ inventory_hostname }}"
#    login: "{{ vault_esxi_username }}"
#    password: "{{ vault_esxi_password }}"
#    src: "{{ build_directory }}/{{ global_users[item.owner].id }}-{{ item.hostname }}-config.iso"
#    dest: "{{ global_users[item.owner].id }}-{{ item.hostname }}/{{ global_users[item.owner].id }}-{{ item.hostname }}-config.iso"
#    datacenter: "ha-datacenter"
#    datastore: "{{ vm_datastore }}"
#  with_items:
#    - "{{ guests }}"

# vim:ft=ansible:
